# MongoDB Configuration
MONGO_ROOT_USERNAME=root
MONGO_ROOT_PASSWORD=example
MONGO_DATABASE=hill_ts
MONGO_PORT=27017

# MongoDB Express Configuration (Optional)
MONGO_EXPRESS_USERNAME=admin
MONGO_EXPRESS_PASSWORD=admin
MONGO_EXPRESS_PORT=8081

# Backend Configuration
BACKEND_PORT=8000

# Frontend Configuration
FRONTEND_PORT=4200

# Worker Configuration
WORKER_REPLICAS=1

# ==========================================
# Persistent Data Paths
# ==========================================
# IMPORTANT: These paths are relative to where you run docker-compose.
# Always run docker-compose from the same directory as docker-compose.prod.yml
#
# The directories will store:
# - mongodb_data: Database files
# - app_data: Uploaded files and parsed JSON data
#
# For production, consider using absolute paths:
# MONGODB_DATA_PATH=/opt/hill-app/mongodb_data
# APP_DATA_PATH=/opt/hill-app/app_data

MONGODB_DATA_PATH=./mongodb_data
APP_DATA_PATH=./app_data

# ==========================================
# Azure OpenAI Configuration
# ==========================================
# Required for AI Chat and Auto-Detection features
# Get your credentials from: https://portal.azure.com
#
# Configuration Instructions:
# 1. Copy this file: cp env.example .env
# 2. Edit .env with your Azure OpenAI credentials below
# 3. The .env file will be automatically loaded by docker-compose

AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4
API_VERSION=2024-02-01
API_KEY=your-azure-openai-key-here
API_ENDPOINT=https://your-resource.openai.azure.com/

# Note: If you don't have Azure OpenAI credentials yet:
# - Visit: https://azure.microsoft.com/en-us/products/ai-services/openai-service
# - The application will run but AI features will not be available

# ==========================================
# Docker Configuration (for production deployment)
# ==========================================
DOCKER_USERNAME=houtj1990
VERSION=latest
